<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SignalRHubs</name>
    </assembly>
    <members>
        <member name="T:SignalRHubs.Controllers.ApiBaseController">
            <summary>
            
            </summary>
        </member>
        <member name="P:SignalRHubs.Controllers.ApiBaseController.UserId">
            <summary>
            
            </summary>
        </member>
        <member name="P:SignalRHubs.Controllers.ApiBaseController.UserEmail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SignalRHubs.Controllers.Chat.ChatsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.#ctor(SignalRHubs.Interfaces.Services.IChatService,Microsoft.AspNetCore.SignalR.IHubContext{SignalRHubs.Hubs.ChatHub},AutoMapper.IMapper,SignalRHubs.Interfaces.Services.IUserService)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="hubContext"></param>
            <param name="mapper"></param>
            <param name="userService"></param>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetChatRooms(System.String)">
            <summary>
            Get all chat rooms for user
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetMessagesByRoomId(System.String)">
            <summary>
            Get messages of a room by Id
            </summary>
            <param name="roomId">Chat Room Id</param>
            <returns>List of chat messages.</returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetMessageById(System.String)">
            <summary>
            Get details of a message by Id
            </summary>
            <param name="id"></param>
            <returns>Return message details</returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.CreateMessage(SignalRHubs.Models.MessageBindingModel)">
            <summary>
            Save new message (with room generation)
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.Put(System.String,SignalRHubs.Models.MessageBindingModel)">
            <summary>
            Update a message by Id
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.Delete(System.String)">
            <summary>
            Delete a message by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetCustomersSummary">
            <summary>
            Get all available users for chat
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.HomeController.CreateCommunity(SignalRHubs.Entities.Community)">
            <summary>
            Create New Community
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.UserController.CreateUser(SignalRHubs.Entities.UserCredential)">
            <summary>
            Create New User
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.UserController.Login(SignalRHubs.Entities.LoginCredential)">
            <summary>
            User Login
            </summary>
            <returns></returns>
        </member>
        <member name="P:SignalRHubs.Entities.Message.FilePath">
            <summary>
            Store the file azure and store your file path when necessary.
            </summary>
        </member>
        <member name="M:SignalRHubs.Extensions.ClaimsExtensionMethods.GetCustomerId(System.Security.Claims.ClaimsIdentity)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Extensions.ClaimsExtensionMethods.GetUserId(System.Security.Principal.IIdentity)">
            <summary>
            Returns the GUID on claims, returns Guid.Empty if claims not found
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Extensions.ClaimsExtensionMethods.GetUserEmail(System.Security.Principal.IIdentity)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Hubs.ChatHub.OnConnectedAsync">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Hubs.ChatHub.OnDisconnectedAsync(System.Exception)">
            <summary>
            
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Hubs.ChatHub.SendAsync(SignalRHubs.Entities.Message)">
            <summary>
            Send message to connected users
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:SignalRHubs.Interfaces.Services.IHomeService">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SignalRHubs.Interfaces.Services.IHomeService.CreateCommunity(SignalRHubs.Entities.Community)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:SignalRHubs.Interfaces.Services.IUserService">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SignalRHubs.Interfaces.Services.IUserService.CreateUser(SignalRHubs.Entities.UserCredential)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Interfaces.Services.IUserService.LoginUser(SignalRHubs.Entities.LoginCredential)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Interfaces.Services.IUserService.GetUser(System.Guid)">
            <summary>
            Get user by ID
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Interfaces.Services.IUserService.GetUsers">
            <summary>
            Get all users
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="P:SignalRHubs.Models.MessageBindingModel.RoomId">
            <summary>
            Room Id 
            <list type="bullet">
            <item>Null when new chat is starting.</item>
            <item>RoomId for existing chat.</item>
            </list>
            </summary>
        </member>
        <member name="M:SignalRHubs.Services.HomeService.#ctor(DbHelper.Interfaces.Services.IDapperService{SignalRHubs.Entities.Community})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:SignalRHubs.Services.HomeService.CreateCommunity(SignalRHubs.Entities.Community)">
            <summary>
            Create new community
            </summary>
            <param name="community"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Services.UserService.#ctor(DbHelper.Interfaces.Services.IDapperService{SignalRHubs.Entities.User},DbHelper.Interfaces.Services.IDapperService{SignalRHubs.Entities.UserCredential},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:SignalRHubs.Services.UserService.CreateUser(SignalRHubs.Entities.UserCredential)">
            <summary>
            Add a new customer
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Services.UserService.LoginUser(SignalRHubs.Entities.LoginCredential)">
            <summary>
            Login User
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Services.UserService.GetUser(System.Guid)">
            <summary>
            Get User by ID
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
