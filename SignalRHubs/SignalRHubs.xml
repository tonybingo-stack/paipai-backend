<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SignalRHubs</name>
    </assembly>
    <members>
        <member name="T:SignalRHubs.Controllers.ApiBaseController">
            <summary>
            
            </summary>
        </member>
        <member name="P:SignalRHubs.Controllers.ApiBaseController.UserName">
            <summary>
            
            </summary> 
        </member>
        <member name="P:SignalRHubs.Controllers.ApiBaseController.UserId">
            <summary>
            Get User ID
            </summary>
        </member>
        <member name="T:SignalRHubs.Controllers.Chat.ChatsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.#ctor(SignalRHubs.Interfaces.Services.IChatService,Microsoft.AspNetCore.SignalR.IHubContext{SignalRHubs.Hubs.ChatHub},AutoMapper.IMapper,SignalRHubs.Interfaces.Services.IUserService)">
            <summary>
            
            </summary>
            <param name="service"></param>
            <param name="hubContext"></param>
            <param name="mapper"></param>
            <param name="userService"></param>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetMessagesByChannelId(System.String)">
            <summary>
            Get messages of a channel by Id
            </summary>
            <param name="channelId">Chat Channel Id</param>
            <returns>List of chat messages.</returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetMessageById(System.String)">
            <summary>
            Get details of a message by Id
            </summary>
            <param name="id"></param>
            <returns>Return message details</returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.SendMessage(SignalRHubs.Models.MessageBindingModel)">
            <summary>
            Send message 
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.Put(SignalRHubs.Models.MessageUpdateModel)">
            <summary>
            Update a message by Id
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.Delete(System.String)">
            <summary>
            Delete a message by Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetCustomersSummary">
            <summary>
            Get all available users for chat
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetCustomerSummaryById(System.String)">
            <summary>
            Get User by UserName
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetChatHistory(System.String)">
            <summary>
            Get Chat History of user
            </summary>
            <returns></returns>  
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.GetAllChatCards">
            <summary>
            Get All Chat cards
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.DeleteAllChathistory">
            <summary>
            Delete All chat cards
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.Chat.ChatsController.DeleteChatCardByID(System.String)">
            <summary>
            Delete chat card By ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.CreateCommunity(SignalRHubs.Models.CommunityModel)">
            <summary>
            Create New Community
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.GetAllCommunity">
            <summary>
            Get all communities
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.UpdateCommunity(SignalRHubs.Models.CommunityUpdateModel)">
            <summary>
            Update Community
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.DeleteCommunity(System.Guid)">
            <summary>
            Delete Community
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.CreateChannel(SignalRHubs.Models.ChannelModel)">
            <summary> 
            Create New Channels
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.GetAllChannels(System.Guid)">
            <summary> 
            Get channels of Community
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.UpdateChannel(SignalRHubs.Models.ChannelUpdateModel)">
            <summary> 
            Update channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.CommunityController.DeleteChannel(System.Guid)">
            <summary>
            Delete Channel
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.ImageController.UpdateUserAvatar(System.String)">
            <summary>
            Create or Update User Avatar
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.ImageController.CommunityAvatar(System.Guid,System.String)">
            <summary>
            Create or Update Community Avatar
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.ImageController.CommunityBkGround(System.Guid,System.String)">
            <summary>
            Create or Update Community Background Image
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.UserController.CreateUser(SignalRHubs.Models.CreateUserModel)">
            <summary>
            Create New User
            </summary>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Controllers.UserController.Login(SignalRHubs.Models.UserModel)">
            <summary>
            User Login
            </summary>
            <returns></returns>
        </member>
        <member name="P:SignalRHubs.Entities.Message.FilePath">
            <summary>
            Store the file azure and store your file path when necessary.
            </summary>
        </member>
        <member name="M:SignalRHubs.Extensions.ClaimsExtensionMethods.GetCustomerId(System.Security.Claims.ClaimsIdentity)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Extensions.ClaimsExtensionMethods.GetUserName(System.Security.Principal.IIdentity)">
            <summary>
            Returns the GUID on claims, returns Guid.Empty if claims not found
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Extensions.ClaimsExtensionMethods.GetUserEmail(System.Security.Principal.IIdentity)">
            <summary>
            
            </summary>
            <param name="identity"></param>
            <returns></returns>
        </member>
        <member name="T:SignalRHubs.Interfaces.Services.IHomeService">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SignalRHubs.Services.HomeService.#ctor(DbHelper.Interfaces.Services.IDapperService{SignalRHubs.Entities.Community})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:SignalRHubs.Services.HomeService.CreateCommunity(SignalRHubs.Entities.Community)">
            <summary>
            Create new community
            </summary>
            <param name="community"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Services.UserService.#ctor(DbHelper.Interfaces.Services.IDapperService{SignalRHubs.Entities.User})">
            <summary>
            
            </summary>
            <param name="repository"></param>
        </member>
        <member name="M:SignalRHubs.Services.UserService.CreateUser(SignalRHubs.Entities.User)">
            <summary>
            Add a new customer
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Services.UserService.LoginUser(SignalRHubs.Models.UserModel)">
            <summary>
            Login User
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:SignalRHubs.Services.UserService.GetUserByUserName(System.String)">
            <summary>
            Get User by UserName
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
    </members>
</doc>
